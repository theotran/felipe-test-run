'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import getFormData, { getNamedFormElementData as getFieldData } from 'get-form-data';
import React, { PropTypes as t } from 'react';

var AutoForm = React.createClass({
  displayName: 'AutoForm',

  propTypes: {
    component: t.any,
    onChange: t.func,
    onSubmit: t.func,
    trim: t.bool,
    trimOnSubmit: t.bool
  },

  getDefaultProps: function getDefaultProps() {
    return {
      component: 'form',
      trim: false,
      trimOnSubmit: false
    };
  },

  _onChange: function _onChange(e) {
    var _e$target = e.target;
    var form = _e$target.form;
    var name = _e$target.name;

    var data = getFieldData(form, name, { trim: this.props.trim });
    var change = {};
    change[name] = data;
    this.props.onChange(e, name, data, change);
  },

  _onSubmit: function _onSubmit(e) {
    var data = getFormData(e.target, { trim: this.props.trimOnSubmit || this.props.trim });
    this.props.onSubmit(e, data);
  },

  render: function render() {
    var _props = this.props;
    var children = _props.children;
    var Component = _props.component;
    var onChange = _props.onChange;
    var onSubmit = _props.onSubmit;
    var trim = _props.trim;
    var trimOnSubmit = _props.trimOnSubmit;

    var props = _objectWithoutProperties(_props, ['children', 'component', 'onChange', 'onSubmit', 'trim', 'trimOnSubmit']);

    return React.createElement(Component, _extends({}, props, {
      children: children,
      onChange: onChange && this._onChange,
      onSubmit: onSubmit && this._onSubmit
    }));
  }
});

export default AutoForm;
// eslint-disable-line no-unused-vars